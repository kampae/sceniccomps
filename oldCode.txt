#    mymap = Map(
#        identifier="fullmap",
#        varname="mymap",
#        style=(
#            "height:100%;"
#            "width:100%;"
#            "top:0;"
#            "left:0;"
#            "position:absolute;"
#            "z-index:200;"
#        ),
#        #47.626925, -122.317704
#        lat = startpoint, #37.4419,
#        lng = endpoint, #-122.1419,
#        markers=[(37.4419, -122.1419)]
#    )

#return flask.render_template('map.html', mymap=mymap)
    #return jsonify(mymap.as_json())
    
    def get_distances_slow(coordinates, final, matrix):
    apiKey = 'AIzaSyBpaOfrcYIpU-7jb-M4zOAyHgBpzoPEoqg'
    for i in range(0, len(coordinates)):
        for j in range(0, len(coordinates)):
            if i!=j:
                start = str(coordinates[i][0]) + ',' + str(coordinates[i][1])
                end = str(coordinates[j][0]) + ',' + str(coordinates[j][1])
                distance1 = vincenty(coordinates[i], final).miles
                distance2 = vincenty(coordinates[j], final).miles
                if distance2>distance1:
                    #matrix[i][j] = 0
                    do = "nothing"
                else:
                    urlstring = 'https://maps.googleapis.com/maps/api/distancematrix/json?origins=' + start + '&destinations=' + end + '&mode=driving&key=' + apiKey
                    result = simplejson.load(urlopen(urlstring))
                    matrix[i][j] = result['rows'][0].get("elements")[0].get('duration').get('value')
    return matrix
    
    def get_scenic_coordinates(coords, scenery):
    coordinates = []
    for item in coords:
        if item[0]==scenery:
            coordinates.append(item[1])
    return coordinates